apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c"]
        args:
         - |-
            ovpn_genconfig -u tcp://$EASYRSA_REQ_CN  \
              -n $(cat /etc/resolv.conf | grep -i nameserver|head -n1|cut -d ' ' -f2) \
              -p "dhcp-option DOMAIN-SEARCH cluster.local" \
              -p "dhcp-option DOMAIN-SEARCH svc.cluster.local" \
              -p "dhcp-option DOMAIN-SEARCH {{ .Release.Namespace }}.svc.cluster.local" \
              -e "auth-user-pass-verify /bin/github-pam-plugin via-file" \
              -e "username-as-common-name" \
              -e "tmp-dir /etc/openvpn/tmp" \
              -e "script-security 3" &&
            mkdir /etc/openvpn/tmp &&
            chmod -R 777 /etc/openvpn/tmp &&
            ovpn_run
        env:
          - name: DEBUG
            value: '0'
          - name: LOG_LEVEL
            value: 'debug'
          - name: EASYRSA_BATCH
            value: '1'
          - name: EASYRSA_REQ_CN
            value: 'vpn.goruha.dev.cloudposse.com'
        ports:
          - name: tcp
            containerPort: 1194
            protocol: TCP
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        volumeMounts:
          - name: keys
            mountPath: /etc/openvpn/pki
        resources:
{{ toYaml .Values.resources | indent 12 }}
      - name: ui
        image: nginx
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
      volumes:
        - name: keys
          secret:
            secretName: {{ template "fullname" . }}
            items:
              - key: "key"
                path: "private/vpn.goruha.dev.cloudposse.com.key"
              - key: "client_key"
                path: "private/admin.key"
              - key: "ca"
                path: "ca.crt"
              - key: "cert"
                path: "issued/vpn.goruha.dev.cloudposse.com.crt"
              - key: "dh"
                path: "dh.pem"
              - key: "tls_auth"
                path: "ta.key"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  type: LoadBalancer
  ports:
  - name: tcp
    targetPort: 1194
    port: 1194
    protocol: TCP
  - name: http
    targetPort: 80
    port: 80
    protocol: TCP
  - name: https
    targetPort: 443
    port: 443
    protocol: TCP
  selector:
    app: {{ template "fullname" . }}
