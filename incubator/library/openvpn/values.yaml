# Default values for openvpn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#################################### REQUIRED CONFIGURATION ############################################################
## Host that would be vpn gateway
host:
# Github team in format {organization name}/{team name}
github_team:
## Secret to store openvpn certificates
secret: openvpn-secret
## Chart support UI with pre-generated client config and instructions
ui:
  ## Enable UI
  enabled: true
  ## Chart support https protocol for UI access.
  ## SSL certificates generates automatically with let's encrypt service https://letsencrypt.org/
  ssl:
    ## Enable HTTPS
    enabled: false
    ## Name of secret to store ssl certificates
    secret: openvpn-letsencrypt-secret
    ## If true let's encrypt will generate a production ready signed certificate.
    ##    WARNING: There are limits to request production ready certificates (https://letsencrypt.org/docs/rate-limits/)
    ## else let's encrypt will generate untrusted certificates.
    ##    Use this mode during debug, because of no limits to such certs.
    prod: false
    ## Email that would be used to restore certificates and get notifications about expiration (https://letsencrypt.org/docs/expiration-emails/)
    email:


####################################### Developer configs ##############################################################

debug: 0

openvpn:
  replicaCount: 1
  image:
    repository: cloudposse/openvpn
    tag: initial
    pullPolicy: Always
  service:
    name: openvpn
    type: LoadBalancer
    externalPort: 443
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

proxy:
  image:
    repository: nginx
    tag: alpine
    pullPolicy: Always
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

ssl_terminator:
  replicaCount: 1
  image:
    repository: ployst/nginx-ssl-proxy
    tag: 0.0.7
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    http:
      name: http
      externalPort: 80
    https:
      name: https
      externalPort: 443
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

letsencrypt:
  replicaCount: 1
  image:
    repository: cloudposse/letsencrypt
    tag: initial
    pullPolicy: Always
  service:
    name: nginx
    type: ClusterIP
    externalPort: 80
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

dashboard:
  replicaCount: 1
  image:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent
  service:
    name: nginx
    type: ClusterIP
    externalPort: 80
    internalPort: 80
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi