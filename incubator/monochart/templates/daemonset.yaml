{{- if .Values.daemonset -}}
{{- if .Values.daemonset.enabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "common.fullname" . }}
{{- with .Values.daemonset.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
  labels:
{{ include "common.labels.standard" . | indent 4 }}
{{- with .Values.daemonset.labels }}
{{ toYaml .| indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
      release: {{ .Release.Name }}
{{- with .Values.daemonset.strategy }}
  updateStrategy:
{{ toYaml . | indent 4 }}
{{- end }}
  revisionHistoryLimit: {{ .Values.daemonset.revisionHistoryLimit }}
  template:
    metadata:
      name: {{ include "common.fullname" . }}
{{- with .Values.daemonset.pod.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name | quote }}
        serve: "true"
{{- with .Values.daemonset.pod.labels }}
{{ toYaml .| indent 8 }}
{{- end }}
    spec:
{{- if index .Values "serviceAccountName" }}
      serviceAccountName: {{ .Values.serviceAccountName }}
{{- end }}
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ include "monochart.env" . | indent 8 }}
        {{- if .Values.daemonset.pod.command }}
        command: {{ toYaml .Values.daemonset.pod.command }}
        {{- end }}
        args: {{ toYaml .Values.daemonset.pod.args }}
{{- with .Values.daemonset.pod.securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
{{- end }}
        ports:
{{- range $name, $port := .Values.service.ports }}
{{- if $port }}
        - name: {{ $name }}
          containerPort: {{ $port.internal }}
          protocol: {{ default "TCP" $port.protocol  }}
{{- end }}
{{- end }}
        volumeMounts:
        - mountPath: {{ .Values.persistence.mountPath | quote }}
          name: storage
{{ include "monochart.files.volumeMounts" . | indent 8 }}
{{- with .Values.probes }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.daemonset.pod.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
{{- end }}
      imagePullSecrets:
{{- if .Values.dockercfg.enabled }}
        - name: {{ include "common.fullname" . }}
{{- end }}
{{- with .Values.image.pullSecrets }}
      {{- range . }}
        - name: {{ . }}
      {{- end }}
{{- end }}
      volumes:
      - name: storage
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "common.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{ include "monochart.files.volumes" . | indent 6 }}
{{- end -}}
{{- end -}}
