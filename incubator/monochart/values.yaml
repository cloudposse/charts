replicaCount: 1

image:
  repository: scratch
  tag: latest
  pullPolicy: IfNotPresent
  # pullSecrets:
  #   - "docker-secret-1"
  #   - "docker-secret-2"

configMaps:
  # default:
  #   labels:
  #     name: value
  #   env:
  #     ENV_NAME: ENV_VALUE
  #   files:
  #     "/etc/ssl/test.crt": |-
  #         ...
  #   files_yaml:
  #     "test.yaml":
  #         group:
  #           key: value
  #         ...

secret:
  enabled: false
  # env:
  #   ENV_NAME: ENV_VALUE
  # files:
  #    "/etc/ssl/test.crt": |-
  #       ...

# Inline environment
env:
  # ENV_NAME: ENV_VALUE

deployment:
  enabled: false
  ## Deployment pods replace strategy
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  # strategy: {}    
  revisionHistoryLimit: 10
  ## Deployment annotations
  annotations: {}
    # name: value
  pod:
    ## Pod annotations
    annotations: {}
    ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
    #  iam.amazonaws.com/role: role-arn

statefulset:
  enabled: false
  ## StatefulSet pods replace strategy
  ## ref: https://v1-10.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#statefulsetupdatestrategy-v1-apps
  # strategy: {}    
  revisionHistoryLimit: 10
  ## Statefulset annotations
  annotations: {}
    # name: value
  pod:
    ## Pod annotations
    annotations: {}
    ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
    #  iam.amazonaws.com/role: role-arn

daemonset:
  enabled: false
  ## DaemonSet pods replace strategy
  ## ref: https://v1-10.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#daemonsetupdatestrategy-v1-apps
  # strategy: {}    
  revisionHistoryLimit: 10
  ## Deamonset annotations
  annotations: {}
    # name: value
  pod:
    ## Pod annotations
    annotations: {}
    ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
    #  iam.amazonaws.com/role: role-arn

job:
  enabled: false
  ## Job annotations
  annotations: {}
    # name: value
  pod:
    ## Pod annotations
    annotations: {}
    ## Read more about kube2iam to provide access to s3 https://github.com/jtblin/kube2iam
    #  iam.amazonaws.com/role: role-arn

service:
  enabled: false
  type: ClusterIP
  port: 80
  annotations: {}
  #   foo.io/bar: "true"

## ServiceMonitor CRDs to create & be scraped by the Prometheus instance.
## Ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/service-monitor.md
##
serviceMonitors:
#  ## Name of the ServiceMonitor to create
#  ##
#  name:
#
#    ## Labels to set used for the ServiceMonitorSelector.
#    labels:
#      prometheus: kube-prometheus
#
#   ## Service label for use in assembling a job name of the form <label value>-<port>
#   ## If no label is specified, the service name is used.
#   jobLabel: ""
#
#    ## Label selector for services to which this ServiceMonitor applies
#    ##
#    selector:
#      matchLabels:
#        app: nginx-ingress
#
#
#    ## Namespaces from which services are selected
#    ##
#    namespaceSelector:
#      ## Match any namespace
#      ##
#      # any: false
#
#      ## Explicit list of namespace names to select
#      ##
#      # matchNames: []
#
#
#    ## Endpoints of the selected service to be monitored
#    ##
#    endpoints:
#      ## Name of the endpoint's service port
#      ## Mutually exclusive with targetPort
#      # - port: ""
#
#      ## Name or number of the endpoint's target port
#      ## Mutually exclusive with port
#      # - targetPort: ""
#
#      ## File containing bearer token to be used when scraping targets
#      ##
#      #   bearerTokenFile: ""
#
#      ## Interval at which metrics should be scraped
#      ##
#      #   interval: 30s
#
#      ## HTTP path to scrape for metrics
#      ##
#      #   path: /metrics
#
#      ## HTTP scheme to use for scraping
#      ##
#      #   scheme: http
#
#      ## TLS configuration to use when scraping the endpoint
#      ##
#      #   tlsConfig:
#
#          ## Path to the CA file
#          ##
#          # caFile: ""
#
#          ## Path to client certificate file
#          ##
#          # certFile: ""
#
#         ## Skip certificate verification
#          ##
#          # insecureSkipVerify: false
#
#          ## Path to client key file
#          ##
#          # keyFile: ""
#
#          ## Server name used to verify host name
#          ##
#          # serverName: ""

prometheusRules:
#  name:
#    labels:
#      prometheus: kube-prometheus
#    groups:
#    - name: prometheus.rules
#      rules:
#      - alert: PrometheusConfigReloadFailed
#        expr: prometheus_config_last_reload_successful == 0
#        for: 10m
#        labels:
#          severity: warning
#        annotations:
#          description: Reloading Prometheus' configuration has failed for {{$labels.namespace}}/{{$labels.pod}}
#          summary: Reloading Promehteus' configuration failed

probes:
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 80m
    memory: 64Mi

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  size: 8Gi
  ## A manually managed Persistent Volume and Claim
  ## Requires Persistence.Enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

## Ingress for load balancer
# ingress:
# - name: "default"
## Ingress labels
##
#   labels:
#     dns: "route53"

## Ingress annotations
##
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"

## Ingress hostnames
## Must be provided if Ingress is enabled
##
#   hosts:
#     "domain.com": /
#     "www.domain.com": /

## Ingress TLS configuration
## Secrets must be manually created in the namespace
##
#   tls:
#   - secretName: server-tls
#     hosts:
#     - domain.com
